#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC DEL N1 N2 N3 N4 N5 N6 N7 N8 N9 N0>;
};

//               == layout and key index ==
//
// +----+----+----+----+----+---+----+----+----+----+----+
// | 00 | 01 | 02 | 03 | 04 |***| 05 | 06 | 07 | 08 | 09 |
// +----+----+----+----+----+---+----+----+----+----+----+
// | 10 | 11 | 12 | 13 | 14 |***| 15 | 16 | 17 | 18 | 19 |
// +----+----+----+----+----+---+----+----+----+----+----+
// | 20 | 21 | 22 | 23 | 24 |***| 25 | 26 | 27 | 28 | 29 |
// +----+----+----+----+----+---+----+----+----+----+----+
//                | 30 | 31 |***| 32 | 33 |
//                +----+----+***+----|----+

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    quick-tap-ms = <180>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <180>;
};

// Home row mods macro
#define HRML(k1,k2,k3,k4,k5) &ht LCTRL k1 &lt 2     k2  &ht LGUI k3  &ht LSHFT k4 &ht LALT  k5
#define HRMR(k1,k2,k3,k4,k5) &ht RALT  k1 &ht RSHFT k2  &ht RGUI k3  &lt 2     k4 &ht RCTRL k5
#define LT1(k1) &lt 1 k1
#define LT2(k1) &lt 2 k1
#define LT3(k1) &lt 3 k1
#define LGT(k1) &ht LGUI k1
#define RGT(k1) &ht RGUI k1
#define BT(k1)  &bt BT_SEL k1

/ {
    behaviors {
        ht: hold_tap {
            label = "TAP_HOLD";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;
        };
        td0: td_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_BACKTICK";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LG(GRAVE)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "3x5 keymap";

        base {
            bindings = <
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp  Q    &kp W     &kp E     &kp R     &kp T     /*  */ &kp  Y    &kp U     &kp I     &kp O     &kp P
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   HRML(A,       S,        D,        F,        G)    /*  */ HRMR(H,       J,        K,        L,        SEMI)
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
    LT3(Z)   &kp X     &kp C     &kp V     &kp B     /*  */ &kp  N    &kp M     &kp COMMA &kp DOT   LT3(FSLH)
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
                                 LGT(RET)  LT2(SPACE)/*  */ LT1(BSPC) RGT(TAB)
                              //================================================
            >;
        };

        symbols {
            bindings = <
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT /*  */ &kp CARET &kp AMPS  &kp STAR  &none     &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp MINUS &kp UNDER &kp GRAVE &kp SQT   &kp DQT   /*  */ &kp COLON &kp LPAR  &kp RPAR  &kp LBKT  &kp RBKT
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp BSLH  &kp PIPE  &kp TILDE &kp EQUAL &kp PLUS  /*  */ &kp LBRC  &kp RBRC  &kp LT    &kp GT    &kp QMARK
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
                                 &trans    &trans    /*  */ &trans    &trans
                              //================================================
            >;
        };

        numbers {
            bindings = <
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp N1    &kp N2    &kp N3    &kp MINUS &kp STAR  /*  */ LG(LEFT)  LG(DOWN)  LG(UP)    LG(RIGHT) &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp N4    &kp N5    &kp N6    &kp PLUS  &kp SLASH /*  */ &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &kp N7    &kp N8    &kp N9    &kp N0    &kp DOT   /*  */ &kp HOME  &kp PG_DN &kp PG_UP &kp END   &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
                                 &trans    &trans    /*  */ &trans    &trans
                              //================================================
            >;
        };

        config {
            bindings = <
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &td0       &none    &none     &none     &td0      /*  */ &none     &none     &none     &none     &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &caps_word &none    &none     &none     &none     /*  */ &none     &none     &none     &none     &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
   &none      &none    BT(1)     BT(0)     BT(2)     /*  */ &none     &none     &none     &none     &none
//+---------+---------+---------+---------+---------+/*  */+---------+---------+---------+---------+---------+
                                 &trans    &trans    /*  */ &trans    &trans
                              //================================================
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_bspc {
            bindings = <&kp BACKSPACE>;
            key-positions = <3 4>;
        };

        combo_vol_down {
            bindings = <&kp C_VOL_DN>;
            key-positions = <26 27>;
        };

        combo_vol_up {
            bindings = <&kp C_VOL_UP>;
            key-positions = <27 28>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <13 16>;
        };
    };
};
